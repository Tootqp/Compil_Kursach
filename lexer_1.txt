Lexical Analyzer:
-----------------Tokens-----------------
Type/Lexeme

INT : int
VAR : Vi
SEPERATOR : ,
VAR : Va
SEPERATOR : ,
VAR : Vb
SEPERATOR : ,
VAR : Vc
SEMICOLON : ;
VAR : Vi
Assign : =
INT : 10
SEMICOLON : ;
VAR : Va
Assign : =
INT : 99
SEMICOLON : ;
VAR : Vb
Assign : =
INT : 8799
SEMICOLON : ;
PRINTS : prints
L1 : (
string : Результат работы цикла:
R1 : )
SEMICOLON : ;
WHILE : while
L1 : (
VAR : Vi
COMPARISON : <
INT : 100
R1 : )
L2 : {
PRINT : print
L1 : (
VAR : Vi
R1 : )
SEMICOLON : ;
VAR : Vi
Assign : =
VAR : Vi
ARTH : +
INT : 10
SEMICOLON : ;
R2 : }
IF : if
L1 : (
VAR : Va
COMPARISON : >
INT : 100
R1 : )
L2 : {
VAR : Vc
Assign : =
VAR : Va
ARTH : *
VAR : Vb
SEMICOLON : ;
PRINTS : prints
L1 : (
string : Произведение а*в будет равно:
R1 : )
SEMICOLON : ;
PRINT : print
L1 : (
VAR : Vc
R1 : )
SEMICOLON : ;
R2 : }
ELSE : else
L2 : {
VAR : Vc
Assign : =
VAR : Vb
ARTH : *
L1 : (
VAR : Va
ARTH : *
VAR : Va
R1 : )
ARTH : *
INT : 2
SEMICOLON : ;
PRINTS : prints
L1 : (
string : Произведение b*(a*a)*2 будет равно:
R1 : )
SEMICOLON : ;
PRINT : print
L1 : (
VAR : Vc
R1 : )
SEMICOLON : ;
R2 : }

